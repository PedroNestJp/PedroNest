generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id             Int         @id @default(autoincrement())
  nomeCompleto   String      @map("nome_completo") @db.VarChar(150)
  email          String?     @unique(map: "email") @db.VarChar(60)
  senha          String?     @db.VarChar(32)
  telefone       String?     @db.VarChar(16)
  cpf            String?     @unique(map: "cpf") @db.VarChar(11)
  dataNascimento DateTime?   @map("data_nascimento") @db.Date
  enderecos      enderecos[]
}

model enderecos {
  id          Int      @id @default(autoincrement())
  logradouro  String   @db.VarChar(100)
  cep         String?  @db.VarChar(9)
  numero      Int
  bairro      String?  @db.VarChar(100)
  complemento String?  @db.VarChar(255)
  cidades     String?  @db.VarChar(255)
  estado      String?  @db.VarChar(50)
  usuario     usuarios @relation(fields: [usuarioId], references: [id])
  usuarioId   Int      @map("usuario_id")
}

model pedidos {
  id                  Int       @id @default(autoincrement())
  quantidadeProdutos  Int       @map("quantidade_pedidos") @db.Int
  numerodoPedido      Int       @map("numero_pedido")@db.Int
  produtos            PedidosProdutos[]
}

model produtos {
  id                  Int       @id @default(autoincrement())
  nome                String    @db.VarChar(50)
  descricao           String?   @db.VarChar(255)
  tipo                String?   @db.VarChar(100)
  validade            DateTime?   
  garantia            String?   @db.VarChar(20)
  preco               Float?    @db.Float
  pedidos             PedidosProdutos[]
}

model PedidosProdutos {
  id                  Int       @id @default(autoincrement())
  idProduto           Int       @map("id_produto")
  idPedido            Int       @map("id_pedido")
  produto             produtos  @relation(fields: [idProduto], references: [id])      
  pedido              pedidos   @relation(fields: [idPedido], references: [id])      
}